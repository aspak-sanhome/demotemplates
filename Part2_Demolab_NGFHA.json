{
  "AWSTemplateFormatVersion": "2010-09-09",
   "Description" : "Barracuda NextGen Firewall Demo Lab VPC",

  "Parameters" : {


   "ArchTagName" : {
    	"Type" : "String",
    	"Default" : "DemoLabVPC",
    	"Description" : "Enter the Modifier prepended to resources of this template"
    },
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "Must be the name of an existing EC2 KeyPair.",
      "Default" : "CudaLab"
    },
    "VPCId": {
        "Type": "AWS::EC2::VPC::Id",
        "Description": "The Id of the VPC in which this instance is being created",
        "Default" : "vpc-708f4d08"
    },
    "PublicSubnet1Id": {
        "Description": "The Id of the subnet in which the primary managed box is deployed",
        "Type": "AWS::EC2::Subnet::Id",
        "Default" : "subnet-ad4499e6"
    },
    "PublicSubnet2Id": {
        "Description": "The Id of the subnet in which the secondary managed box is deployed",
        "Type": "AWS::EC2::Subnet::Id",
        "Default" : "subnet-7afceb20"
    },
    "PrivateRouteTableID" : {
      "Type" : "String",
      "Description" : " RouteTable ID for the private table used to create VIP network routes",
      "Default" : "rtb-9cf059e6"
    },
     "PublicRouteTableID" : {
       "Type" : "String",
       "Description" : " RouteTable ID for the public route table used to create VIP network routes",
       "Default" : "rtb-64fd541e"
     },
     "NGCCinstanceId" : {
       "Description" : "Control Center Instance ID ",
        "Type" : "AWS::EC2::Instance::Id",
        "Default" : "i-088125cf6a764dc1b"
     }

  },


  "Resources": {

    "HAStackNGF1":{
          "Type" : "AWS::CloudFormation::Stack",
        	       "Properties" : {
        	           "TemplateURL" : "https://s3.amazonaws.com/ngfdemolabtemplates/nested/managed-generic.json",
        	           "Parameters" : {
                       "LicenceMode": "PAYG",
                       "InstanceType": "t2.small",
                       "KeyName" : {"Ref" : "KeyName"},
                       "IAMProfile": "NextGenFirewallRole",
                       "CCIPAddress": "10.100.1.10",
                       "CCUser": "root",
                       "CCPassword": "NGF1r3wall!!",
                       "CCCluster": "NA",
                       "CCRange": "1",
                       "CCBoxname": "Campbell-clm1",
                       "PrivateIpAddress": "10.100.0.10",
                       "SecondaryPrivateIpAddress": "10.100.0.15",
                       "ThirdPrivateIpAddress" : "10.100.0.20",
                       "VPCId": {"Ref" : "VPCId"},
                       "SubnetId": {"Ref" : "PublicSubnet1Id"}
        	           },
                     "TimeoutInMinutes" : "15"
                }
            },
            "HAStackNGF2":{
                  "Type" : "AWS::CloudFormation::Stack",
                         "Properties" : {
                             "TemplateURL" : "https://s3.amazonaws.com/ngfdemolabtemplates/nested/managed-generic.json",
                             "Parameters" : {
                               "LicenceMode": "PAYG",
                               "InstanceType": "t2.small",
                               "KeyName" : { "Ref" : "KeyName"},
                               "IAMProfile": "NextGenFirewallRole",
                               "CCIPAddress": "10.100.1.10",
                               "CCUser": "root",
                               "CCPassword": "NGF1r3wall!!",
                               "CCCluster": "NA",
                               "CCRange": "1",
                               "CCBoxname": "Campbell-clm2",
                               "PrivateIpAddress": "10.100.10.10",
                               "SecondaryPrivateIpAddress": "10.100.10.15",
                               "ThirdPrivateIpAddress" : "10.100.10.20",
                               "VPCId": {"Ref" : "VPCId"},
                               "SubnetId": {"Ref" : "PublicSubnet2Id"}
                             },
                        "TimeoutInMinutes" : "15"
                        }
            },

            "EIPtoHANGF1":{
                  "Type" : "AWS::CloudFormation::Stack",
                  "DependsOn" :"HAStackNGF1",
                         "Properties" : {
                             "TemplateURL" : "https://s3.amazonaws.com/ngfdemolabtemplates/nested/associateEIP.json",
                             "Parameters" : {
                               "EIPaddressIdPrimary" : "eipalloc-2802dc1d",
                               "EIPaddressIdSecondary" : "eipalloc-8f05dbba",
                               "instanceId" :  { "Fn::GetAtt" : [ "HAStackNGF1", "Outputs.instanceId" ] },
                               "PrimaryPrivateIPAddress" : "10.100.0.10",
                               "SecondaryPrivateIpAddress" : "10.100.0.15"
                             }
                        }
            },

            "EIPHANGF2":{
                  "Type" : "AWS::CloudFormation::Stack",
                   "DependsOn" : "HAStackNGF2",
                  "Properties" : {
                       "TemplateURL" : "https://s3.amazonaws.com/ngfdemolabtemplates/nested/associateEIP.json",
                       "Parameters" : {
                       "EIPaddressIdPrimary" : "eipalloc-f705dbc2",
                       "EIPaddressIdSecondary" : "eipalloc-1f0ad42a",
                       "instanceId" :  { "Fn::GetAtt" : [ "HAStackNGF2", "Outputs.instanceId" ] },
                       "PrimaryPrivateIPAddress" : "10.100.10.10",
                       "SecondaryPrivateIpAddress" : "10.100.10.15"
                             }
                        }
              },
              "HARouteTable":{
                    "Type" : "AWS::CloudFormation::Stack",
                     "DependsOn" : "HAStackNGF2",
                    "Properties" : {
                         "TemplateURL" : "https://s3.amazonaws.com/ngfdemolabtemplates/nested/hub-aws-routing.json",
                         "Parameters" : {
                           "NGFinstanceId" : { "Fn::GetAtt" : [ "HAStackNGF1", "Outputs.instanceId" ] } ,
                           "NGCCinstanceId" : {"Ref" : "NGCCinstanceId"},
                           "PrivateRouteTableID" : {"Ref" : "PrivateRouteTableID"},
                           "PublicRouteTableID" : {"Ref" : "PublicRouteTableID"}
                               }
                          }
              }


 },

 "Outputs" : {
  }


 }
